[{"/Users/nazwright/Desktop/backend/frontend/src/index.js":"1","/Users/nazwright/Desktop/backend/frontend/src/components/App.js":"2","/Users/nazwright/Desktop/backend/frontend/src/reducers/index.js":"3","/Users/nazwright/Desktop/backend/frontend/src/components/Sidebar.js":"4","/Users/nazwright/Desktop/backend/frontend/src/components/Dashboard.js":"5","/Users/nazwright/Desktop/backend/frontend/src/components/Landing.js":"6","/Users/nazwright/Desktop/backend/frontend/src/components/Profile.js":"7","/Users/nazwright/Desktop/backend/frontend/src/components/Contacts.js":"8","/Users/nazwright/Desktop/backend/frontend/src/components/Success.js":"9","/Users/nazwright/Desktop/backend/frontend/src/components/Failure.js":"10","/Users/nazwright/Desktop/backend/frontend/src/components/Login.js":"11","/Users/nazwright/Desktop/backend/frontend/src/components/Signup.js":"12","/Users/nazwright/Desktop/backend/frontend/src/components/clients/ClientList.js":"13","/Users/nazwright/Desktop/backend/frontend/src/components/applications/ApplyForm.js":"14","/Users/nazwright/Desktop/backend/frontend/src/components/pricing/PricingPage.js":"15","/Users/nazwright/Desktop/backend/frontend/src/components/clients/ClientForm.js":"16","/Users/nazwright/Desktop/backend/frontend/src/components/workflow/ProgressBar.js":"17","/Users/nazwright/Desktop/backend/frontend/src/components/workflow/Applicant.js":"18","/Users/nazwright/Desktop/backend/frontend/src/components/workflow/Workflow.js":"19","/Users/nazwright/Desktop/backend/frontend/src/components/maps/Map.js":"20","/Users/nazwright/Desktop/backend/frontend/src/components/listings/ListingForm.js":"21","/Users/nazwright/Desktop/backend/frontend/src/components/listings/Job.js":"22","/Users/nazwright/Desktop/backend/frontend/src/components/listings/ListingsPage.js":"23","/Users/nazwright/Desktop/backend/frontend/src/reducers/fieldsReducer.js":"24","/Users/nazwright/Desktop/backend/frontend/src/reducers/submissionsReducer.js":"25","/Users/nazwright/Desktop/backend/frontend/src/reducers/listingReducer.js":"26","/Users/nazwright/Desktop/backend/frontend/src/reducers/authReducer.js":"27","/Users/nazwright/Desktop/backend/frontend/src/reducers/zipsReducer.js":"28","/Users/nazwright/Desktop/backend/frontend/src/actions/index.js":"29","/Users/nazwright/Desktop/backend/frontend/src/components/headers/VisitorHeader.js":"30","/Users/nazwright/Desktop/backend/frontend/src/components/headers/LoggedInHeader.js":"31","/Users/nazwright/Desktop/backend/frontend/src/components/dashboards/EmployerDash.js":"32","/Users/nazwright/Desktop/backend/frontend/src/components/clients/ClientListItem.js":"33","/Users/nazwright/Desktop/backend/frontend/src/components/dashboards/ApplicantDash.js":"34","/Users/nazwright/Desktop/backend/frontend/src/components/clients/ClientFieldsData.js":"35","/Users/nazwright/Desktop/backend/frontend/src/components/listings/JobsPagination.js":"36","/Users/nazwright/Desktop/backend/frontend/src/components/listings/ListingsList.js":"37","/Users/nazwright/Desktop/backend/frontend/src/actions/types.js":"38","/Users/nazwright/Desktop/backend/frontend/src/components/listings/ListingsItem.js":"39","/Users/nazwright/Desktop/backend/frontend/src/components/workflow/WorkflowCard.js":"40","/Users/nazwright/Desktop/backend/frontend/src/components/Payments.js":"41","/Users/nazwright/Desktop/backend/frontend/src/components/data/WrkfwidgetData.js":"42","/Users/nazwright/Desktop/backend/frontend/src/components/data/ActionButtonData.js":"43","/Users/nazwright/Desktop/backend/frontend/src/components/data/SidebarData.js":"44","/Users/nazwright/Desktop/backend/frontend/src/components/Modal.js":"45"},{"size":559,"mtime":1610991895299,"results":"46","hashOfConfig":"47"},{"size":3232,"mtime":1615074196930,"results":"48","hashOfConfig":"47"},{"size":434,"mtime":1615074196948,"results":"49","hashOfConfig":"47"},{"size":745,"mtime":1610031914582,"results":"50","hashOfConfig":"47"},{"size":889,"mtime":1611930332356,"results":"51","hashOfConfig":"47"},{"size":2904,"mtime":1610343071726,"results":"52","hashOfConfig":"47"},{"size":2982,"mtime":1609778412014,"results":"53","hashOfConfig":"47"},{"size":3042,"mtime":1609732623078,"results":"54","hashOfConfig":"47"},{"size":144,"mtime":1610431867030,"results":"55","hashOfConfig":"47"},{"size":143,"mtime":1610431885306,"results":"56","hashOfConfig":"47"},{"size":2615,"mtime":1615074196931,"results":"57","hashOfConfig":"47"},{"size":4068,"mtime":1615074196932,"results":"58","hashOfConfig":"47"},{"size":740,"mtime":1611080015005,"results":"59","hashOfConfig":"47"},{"size":2666,"mtime":1615074196933,"results":"60","hashOfConfig":"47"},{"size":3247,"mtime":1610761262691,"results":"61","hashOfConfig":"47"},{"size":2215,"mtime":1611158566740,"results":"62","hashOfConfig":"47"},{"size":147,"mtime":1615074196945,"results":"63","hashOfConfig":"47"},{"size":2077,"mtime":1615074196945,"results":"64","hashOfConfig":"47"},{"size":4740,"mtime":1615074196946,"results":"65","hashOfConfig":"47"},{"size":232,"mtime":1615074196944,"results":"66","hashOfConfig":"47"},{"size":10483,"mtime":1615074196941,"results":"67","hashOfConfig":"47"},{"size":2677,"mtime":1615074196940,"results":"68","hashOfConfig":"47"},{"size":1336,"mtime":1615074196943,"results":"69","hashOfConfig":"47"},{"size":239,"mtime":1615074196947,"results":"70","hashOfConfig":"47"},{"size":235,"mtime":1615074196949,"results":"71","hashOfConfig":"47"},{"size":270,"mtime":1609825696383,"results":"72","hashOfConfig":"47"},{"size":260,"mtime":1610992121458,"results":"73","hashOfConfig":"47"},{"size":235,"mtime":1610999918878,"results":"74","hashOfConfig":"47"},{"size":3002,"mtime":1615074196929,"results":"75","hashOfConfig":"47"},{"size":1086,"mtime":1615074196939,"results":"76","hashOfConfig":"47"},{"size":4874,"mtime":1615074196938,"results":"77","hashOfConfig":"47"},{"size":1370,"mtime":1611084431614,"results":"78","hashOfConfig":"47"},{"size":481,"mtime":1611080216993,"results":"79","hashOfConfig":"47"},{"size":4402,"mtime":1610914400308,"results":"80","hashOfConfig":"47"},{"size":1743,"mtime":1611077029873,"results":"81","hashOfConfig":"47"},{"size":796,"mtime":1615074196940,"results":"82","hashOfConfig":"47"},{"size":735,"mtime":1615074196942,"results":"83","hashOfConfig":"47"},{"size":252,"mtime":1615074196930,"results":"84","hashOfConfig":"47"},{"size":2494,"mtime":1615074196941,"results":"85","hashOfConfig":"47"},{"size":2728,"mtime":1615074196947,"results":"86","hashOfConfig":"47"},{"size":850,"mtime":1609346042749,"results":"87","hashOfConfig":"47"},{"size":769,"mtime":1611084541470,"results":"88","hashOfConfig":"47"},{"size":116,"mtime":1609779351404,"results":"89","hashOfConfig":"47"},{"size":2965,"mtime":1615074196936,"results":"90","hashOfConfig":"47"},{"size":355,"mtime":1615074196931,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1izrtyp",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"94"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},"/Users/nazwright/Desktop/backend/frontend/src/index.js",[],["210","211"],"/Users/nazwright/Desktop/backend/frontend/src/components/App.js",[],"/Users/nazwright/Desktop/backend/frontend/src/reducers/index.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/Sidebar.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/Dashboard.js",["212"],"import React, { Component } from \"react\";\nimport \"./css/Dashboard.css\";\nimport { connect } from \"react-redux\";\nimport EmployerDash from \"./dashboards/EmployerDash\";\nimport ApplicantDash from \"./dashboards/ApplicantDash\";\n\nclass Dashboard extends Component {\n  renderContent() {\n    switch (this.props.auth) {\n      case false:\n        return;\n      case null:\n        return;\n      default:\n        switch (this.props.auth.role) {\n          case \"Employer\":\n            return <EmployerDash />;\n          case \"Applicant\":\n            return <ApplicantDash />;\n          case \"Recruiter\":\n            break;\n          case \"Admin\":\n            return <EmployerDash />;\n        }\n    }\n  }\n\n  render() {\n    return <div className=\"dashboard\">{this.renderContent()}</div>;\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n","/Users/nazwright/Desktop/backend/frontend/src/components/Landing.js",["213","214"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport LandingImage from \"../assets/landingBackground.jpg\";\nimport BSForm from \"react-bootstrap/Form\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as IoIcons from \"react-icons/io\";\nimport * as AiIcons from \"react-icons/ai\";\n// populate dropdown from a list of job categories\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    backgroundImage: `url(${LandingImage})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n}));\nexport default function Landing() {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.root}>\n        <div className=\"image-box__overlay\">\n          <Row>\n            <h1 className=\"white-color-text\"> Find a Job</h1>\n          </Row>\n          <Row>\n            <h2 className=\"white-color-text\">\n              {\" \"}\n              Look for an amazing opportunity in your area\n            </h2>\n          </Row>\n          <Row>\n            <BSForm className=\"add-half-width\">\n              <div className=\"m-b-10\">\n                <BSForm.Label className=\"white-color-text\">\n                  <IoIcons.IoMdBusiness size={25} color=\"white\" />\n                  What type of job are you looking for?\n                </BSForm.Label>\n                <BSForm.Control\n                  as=\"input\"\n                  placeholder=\"Enter Job title or Skill\"\n                  type=\"text\"\n                ></BSForm.Control>\n              </div>\n              <div className=\"m-b-10\">\n                <BSForm.Label className=\"white-color-text\">\n                  {\" \"}\n                  <FaIcons.FaMapMarkerAlt size={25} color=\"white\" /> Where?\n                </BSForm.Label>\n                <BSForm.Control\n                  as=\"input\"\n                  placeholder=\"Enter City, State, or Zip Code\"\n                  type=\"text\"\n                ></BSForm.Control>\n              </div>\n              <div className=\"m-b-10\">\n                <BSForm.Label className=\"white-color-text\">\n                  <AiIcons.AiFillTags size={25} color=\"white\" /> Tags\n                </BSForm.Label>\n                <BSForm.Control as=\"select\"></BSForm.Control>\n              </div>\n              <BSForm.Text className=\"white-color-text\">\n                Select from the available tags to recieve tailored results\n              </BSForm.Text>\n              <Row>\n                <Button>Search Open Jobs</Button>\n              </Row>\n              <h5 className=\"white-color-text\">\n                Want more advanced search options?{\" \"}\n                <a href=\"#\">Advanced Search</a>\n              </h5>\n            </BSForm>\n          </Row>\n        </div>\n        <CssBaseline />\n      </div>\n      <div>yo</div>\n    </div>\n  );\n}\n","/Users/nazwright/Desktop/backend/frontend/src/components/Profile.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/Contacts.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/Success.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/Failure.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/Login.js",["215","216","217","218"],"import React, { Component } from \"react\";\nimport Form1a from \"react-bootstrap/Form\";\nimport { Field, Form } from \"react-final-form\";\nimport axios from \"axios\";\nimport { fetchForm, login } from \"../actions\";\nimport { Container, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\n\nclass Login extends Component {\n  componentDidMount() {\n    this.props.fetchForm(\"login-form\");\n  }\n  // efgwe432rwf\n\n  submitApplication = async (values) => {\n    this.props.login(values);\n\n    //document.getElementById(\"submit\").disabled = true;\n  };\n\n  required = (value) => (value ? undefined : \"Required\");\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={(values) => this.submitApplication(values)}>\n          {({\n            handleSubmit,\n            submitSucceeded,\n            submitting,\n            dirty,\n            pristine,\n            values,\n            form,\n          }) => (\n            <Container>\n              <form\n                id=\"form\"\n                onSubmit={async (e) => {\n                  await handleSubmit(e);\n                }}\n              >\n                <div>\n                  {this.props.fields.map((field, index) => {\n                    return (\n                      <Field\n                        key={index}\n                        name={field.name}\n                        validate={\n                          field.validation.required ? this.required : undefined\n                        }\n                      >\n                        {({ input, meta, placeholder }) => (\n                          <div className={meta.active ? \"active\" : \"\"}>\n                            <label>{field.label}</label>\n\n                            <input type=\"text\" {...input}></input>\n                            {meta.error && meta.touched && (\n                              <div className=\"red-text\">{meta.error}</div>\n                            )}\n                            <div></div>\n                          </div>\n                        )}\n                      </Field>\n                    );\n                  })}\n                </div>\n                <button type=\"submit\" id=\"submit\" disabled={submitSucceeded}>\n                  Submit\n                </button>\n                <a href=\"/signup\">Register</a>\n                <pre>{JSON.stringify(values, undefined, 2)}</pre>\n              </form>\n            </Container>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ fields }) {\n  return { fields };\n}\n\nexport default connect(mapStateToProps, { fetchForm, login })(Login);\n","/Users/nazwright/Desktop/backend/frontend/src/components/Signup.js",["219","220","221","222","223"],"import React, { Component } from \"react\";\nimport Form1a from \"react-bootstrap/Form\";\nimport { Field, Form } from \"react-final-form\";\nimport axios from \"axios\";\nimport { fetchForm, register } from \"../actions\";\nimport { Container, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applicant: false,\n      employer: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchForm(\"sign-up-form\");\n  }\n\n  submitApplication = async (values) => {\n    this.props.register(values);\n    Swal.fire({\n      title: \"Submitted\",\n    });\n    //document.getElementById(\"submit\").disabled = true;\n  };\n\n  required = (value) => (value ? undefined : \"Required\");\n\n  onChangeInput = (event) => {\n    if (event && event.target) {\n      switch (event.target.id) {\n        case \"applicant\":\n          this.setState({ employer: true, applicant: false });\n        case \"employer\":\n          this.setState({ employer: true, applicant: false });\n          break;\n      }\n      console.log(this.state);\n    } else {\n      return;\n    }\n  };\n  // wbuwebrwugrg\n  render() {\n    return (\n      <div>\n        <Form\n          onSubmit={(values) => {\n            this.submitApplication(values);\n          }}\n        >\n          {({\n            handleSubmit,\n            submitSucceeded,\n            submitting,\n            dirty,\n            pristine,\n            values,\n            form,\n          }) => (\n            <Container>\n              <form\n                id=\"form\"\n                onSubmit={async (e) => {\n                  await handleSubmit(e);\n                }}\n              >\n                <div>\n                  {this.props.fields.map((field, index) => {\n                    return (\n                      <Field\n                        key={index}\n                        name={field.name}\n                        validate={\n                          field.validation.required ? this.required : undefined\n                        }\n                      >\n                        {({ input, meta, placeholder }) => (\n                          <div className={meta.active ? \"active\" : \"\"}>\n                            <label>{field.label}</label>\n\n                            <input type=\"text\" {...input}></input>\n                            {meta.error && meta.touched && (\n                              <div className=\"red-text\">{meta.error}</div>\n                            )}\n                            <div></div>\n                          </div>\n                        )}\n                      </Field>\n                    );\n                  })}\n                  <Field name=\"role\" validate={this.required}>\n                    {({ input, meta, placeholder }) => (\n                      <div className={meta.active ? \"active\" : \"\"}>\n                        <label>Purpose for using People Count</label>\n\n                        <select name=\"role\" {...input}>\n                          <option hidden>Select an option</option>\n                          <option value=\"Applicant\">\n                            I am looking to apply to job openings\n                          </option>\n                          <option value=\"Employer\">\n                            I am an employer looking for a staffing solution\n                          </option>\n                        </select>\n\n                        <div></div>\n                      </div>\n                    )}\n                  </Field>\n                </div>\n                <button type=\"submit\" id=\"submit\" disabled={submitSucceeded}>\n                  Submit\n                </button>\n                <button>Sign Up using Google</button>\n                <pre>{JSON.stringify(values, undefined, 2)}</pre>\n              </form>\n            </Container>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ fields }) {\n  return { fields };\n}\n\nexport default connect(mapStateToProps, { fetchForm, register })(Login);\n","/Users/nazwright/Desktop/backend/frontend/src/components/clients/ClientList.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/applications/ApplyForm.js",["224","225","226","227"],"import React, { Component } from \"react\";\nimport Form1a from \"react-bootstrap/Form\";\nimport { Field, Form } from \"react-final-form\";\nimport axios from \"axios\";\nimport { fetchForm, submitApplication } from \"../../actions\";\nimport { Container, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\n\nclass ApplyForm extends Component {\n  componentDidMount() {\n    this.props.fetchForm(\"associate-application\");\n  }\n\n  submitApp = (values) => {\n    values.listingId = this.props.match.params.id;\n    //document.getElementById(\"submit\").disabled = true;\n    this.props.submitApplication(values, \"associate-application\");\n  };\n\n  required = (value) => (value ? undefined : \"Required\");\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={(values) => this.submitApp(values)}>\n          {({\n            handleSubmit,\n            submitSucceeded,\n            submitting,\n            dirty,\n            pristine,\n            values,\n            form,\n          }) => (\n            <Container>\n              <form\n                id=\"form\"\n                onSubmit={async (e) => {\n                  await handleSubmit(e);\n                }}\n              >\n                <div>\n                  {this.props.fields.map((field, index) => {\n                    return (\n                      <Field\n                        key={index}\n                        name={field.name}\n                        validate={\n                          field.validation.required ? this.required : undefined\n                        }\n                      >\n                        {({ input, meta, placeholder }) => (\n                          <div className={meta.active ? \"active\" : \"\"}>\n                            <label>{field.label}</label>\n\n                            <input type=\"text\" {...input}></input>\n                            {meta.error && meta.touched && (\n                              <div className=\"red-text\">{meta.error}</div>\n                            )}\n                            <div></div>\n                          </div>\n                        )}\n                      </Field>\n                    );\n                  })}\n                </div>\n                <button type=\"submit\" id=\"submit\" disabled={submitSucceeded}>\n                  Submit\n                </button>\n                <pre>{JSON.stringify(values, undefined, 2)}</pre>\n              </form>\n            </Container>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ fields }) {\n  return { fields };\n}\n\nexport default connect(mapStateToProps, { fetchForm, submitApplication })(\n  ApplyForm\n);\n","/Users/nazwright/Desktop/backend/frontend/src/components/pricing/PricingPage.js",["228","229","230","231","232"],"import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\n//\nconst stripePromise = loadStripe(\n  \"pk_test_51I3QyMEah8AfDWDxGBcOllDRXirhbQ4PmO79prpK4rmIO2nGnS0C8b6nbUBcmjPCnWpCaSP6lvhemOrejM8V7oie00I7tIPnAf\"\n);\nexport default class PricingPage extends Component {\n  openPortal() {\n    axios.post(\"/api/customer-portal\").then((res) => {\n      console.log(res);\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    var priceId = \"\";\n    switch (event.target.name) {\n      case \"bronze\":\n        priceId = \"price_1I7qL1Eah8AfDWDxTZOgsizw\";\n        break;\n      case \"silver\":\n        priceId = \"price_1I7qMtEah8AfDWDx0rFA5bGj\";\n        break;\n      case \"gold\":\n        priceId = \"price_1I7qTREah8AfDWDxVT8yjaiP\";\n        break;\n    }\n\n    stripePromise.then((stripe) => {\n      axios\n        .post(\"/api/create-checkout-session\", {\n          priceId: priceId,\n        })\n        // res.data.sessionId\n        .then((response) => {\n          stripe\n            .redirectToCheckout({\n              sessionId: response.data.sessionId,\n            })\n            .catch((err) => {\n              if (err) {\n                // display localized error\n                console.log(err);\n              }\n            });\n        });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"pricing-page-container\">\n        <div className=\"pricing-header\">Choose A Plan</div>\n        <div className=\"wrapper\">\n          <div className=\"single-price\">\n            <h1>Bronze</h1>\n            <div className=\"price\">\n              <h2>$75</h2>\n            </div>\n            <div className=\"deals\">\n              <h4> Monthly </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n            </div>\n            <a name=\"bronze\" onClick={this.handleClick}>\n              select\n            </a>\n          </div>\n          <div className=\"single-price\">\n            <h1>Silver</h1>\n            <div className=\"price\">\n              <h2>$100</h2>\n            </div>\n            <div className=\"deals\">\n              <h4> Monthly </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n            </div>\n            <a name=\"silver\" onClick={this.handleClick}>\n              select\n            </a>\n          </div>\n\n          <div className=\"single-price\">\n            <h1>Gold </h1>\n            <div className=\"price\">\n              <h2>$150</h2>\n            </div>\n            <div className=\"deals\">\n              <h4> Monthly </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n              <h4> Lorem ipsum dolor </h4>\n            </div>\n            <a name=\"gold\" onClick={this.handleClick}>\n              select\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/nazwright/Desktop/backend/frontend/src/components/clients/ClientForm.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/workflow/ProgressBar.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/workflow/Applicant.js",["233","234"],"import React, { useEffect } from \"react\";\nimport { fetchSubmissions, fetchListing } from \"../../actions\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Button, Container } from \"react-bootstrap\";\n\nexport const Applicant = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchSubmissions());\n  }, []);\n\n  function filterSubs() {\n    return props.subs.filter(\n      (submission) => submission._id === props.match.params.id\n    );\n  }\n  return (\n    <div className=\"float-container\">\n      {props.subs\n        .filter((submission) => submission._id === props.match.params.id)\n        .map((submission, index) => {\n          return (\n            <h1>\n              Application For{\" \"}\n              {submission.values.first + \" \" + submission.values.last}\n            </h1>\n          );\n        })}\n      <div className=\"float-child\">\n        <table className=\"table table-striped table-hover\">\n          <thead>\n            <tr>\n              <th>Field</th>\n              <th>Entry</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.subs\n              .filter((submission) => submission._id === props.match.params.id)\n              .map((item, index) => {\n                return Object.keys(item.values).map((itemkey, indexkey) => {\n                  return (\n                    <tr>\n                      <td>{itemkey}</td>\n                      <td>{item.values[itemkey]}</td>\n                    </tr>\n                  );\n                });\n              })}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"float-child\">\n        <Container>\n          <form>\n            <textarea rows={4} cols={50} placeholder=\"Enter Notes Here\" />\n            <Button>Approve Application</Button>\n            <Button>Decline Application</Button>\n          </form>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps({ subs, listings }) {\n  return { subs, listings };\n}\n\nexport default connect(mapStateToProps, { fetchSubmissions, fetchListing })(\n  Applicant\n);\n","/Users/nazwright/Desktop/backend/frontend/src/components/workflow/Workflow.js",["235"],"import React, { Component } from \"react\";\nimport {\n  Form,\n  Col,\n  FormControl,\n  Button,\n  Container,\n  Row,\n  Modal,\n} from \"react-bootstrap\";\nimport { fetchSubmissions, fetchListing } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport * as GrIcons from \"react-icons/gr\";\n\nclass Workflow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: \"\",\n      modal: false,\n      email: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchSubmissions();\n    this.props.fetchListing();\n  }\n\n  handleSearch = (event) => {\n    if (event && event.target) {\n      switch (event.target.type) {\n        case \"select-one\":\n          this.setState({ status: event.target.value });\n          break;\n        case \"text\":\n          this.setState({ result: event.target.value });\n          break;\n        default:\n          console.log(event.target.type);\n          break;\n      }\n    }\n  };\n\n  handleOnClick(event) {\n    if (event && event.target) {\n      if (event.target.type === \"button\") {\n        this.modalOpen(event);\n      }\n    }\n  }\n\n  modalOpen(event, submission) {\n    this.setState({\n      modal: true,\n    });\n  }\n\n  modalClose() {\n    this.setState({ modal: false });\n  }\n\n  render() {\n    const { subs } = this.props;\n    return (\n      <Container>\n        <div>\n          <Form>\n            <Form.Row>\n              <Col>\n                <FormControl\n                  as=\"select\"\n                  onChange={(e) => this.handleSearch(e)}\n                  placeholder=\"Select Workflow Status\"\n                >\n                  <option hidden>Select Workflow Status</option>\n                  <option value=\"\">All</option>\n                  <option value=\"new\">New</option>\n                  <option value=\"active\">Active</option>\n                  <option value=\"inactive\">Inactive</option>\n                  <option value=\"placed\">Placed</option>\n                  <option value=\"terminated\">Terminated</option>\n                  <option value=\"dnr\">Do Not Return</option>\n                </FormControl>\n              </Col>\n              <Col>\n                <FormControl\n                  value={this.state.filter}\n                  onChange={(e) => this.handleSearch(e)}\n                  type=\"text\"\n                  placeholder=\"Search By Name\"\n                />\n              </Col>\n              <Col>\n                <Button>Search</Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </div>\n        <Row>\n          <table className=\"table table-striped table-hover\">\n            <thead>\n              <tr>\n                <th scope=\"col\"></th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Job</th>\n              </tr>\n            </thead>\n            <tbody>\n              {subs.map((submission, index) => {\n                return (\n                  <tr\n                    key={index}\n                    className={\n                      this.state.status &&\n                      this.state.status !== submission.status\n                        ? \"d-none\"\n                        : undefined\n                    }\n                  >\n                    <th scope=\"row\">\n                      <Button\n                        name={`${submission.values.email}`}\n                        href={`/applicant/${submission._id}`}\n                      >\n                        View\n                      </Button>\n                    </th>\n                    <td>{submission.values.first}</td>\n                    <td>{submission.values.last}</td>\n                    <td>{submission.status}</td>\n                    <td>{}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </Row>\n        <Modal show={this.state.modal} onHide={(e) => this.modalClose(e)}>\n          <Modal.Header closeButton>\n            <Modal.Title></Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"float-container\">\n              <div className=\"float-child\">\n                <table>\n                  <thead></thead>\n                  <tbody></tbody>\n                </table>\n              </div>\n              <div className=\"float-child\"></div>\n            </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={(e) => this.modalClose(e)}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps({ subs, listings }) {\n  return { subs, listings };\n}\n\nexport default connect(mapStateToProps, { fetchSubmissions, fetchListing })(\n  Workflow\n);\n","/Users/nazwright/Desktop/backend/frontend/src/components/maps/Map.js",["236","237","238","239"],"import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport React, { Component } from \"react\";\n\nexport default class Map extends Component {\n  render() {\n    return <div className=\"add-full-height \"></div>;\n  }\n}\n","/Users/nazwright/Desktop/backend/frontend/src/components/listings/ListingForm.js",["240","241"],"import React, { useEffect, useState } from \"react\";\nimport \"../css/ListingForm.css\";\n\nexport default function ListingForm() {\n  useEffect(() => {\n    // make ajax request for the states\n  });\n\n  const selectAll = (event) => {\n    if (event && event.target) {\n      event.target.checked = !event.target.checked;\n      const checkboxes = document.querySelectorAll(\"input[type=checkbox]\");\n      checkboxes.forEach((checkbox) => {\n        // select or deselect all selections\n        if (checkbox.name !== \"Other\") {\n          checkbox.checked = !checkbox.checked;\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"container mainContainer\">\n      <form>\n        <div className=\"form-group\">Job Information</div>\n\n        <hr />\n\n        <div className=\"form-group\">\n          <label for=\"addListing_Title\" className=\"control-label\">\n            Title\n          </label>\n          <input\n            type=\"text\"\n            name=\"addListing_Title\"\n            className=\"form-control\"\n            id=\"addListing_Title\"\n            value=\"\"\n            maxLength=\"100\"\n            required\n            oninvalid=\"this.setCustomValidity('Invalid title name')\"\n            oninput=\"this.setCustomValidity('')\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"addListing_Description\" class=\"control-label\">\n            Description\n          </label>\n          <textarea\n            id=\"addListing_Description\"\n            className=\"form-control\"\n            name=\"addListing_Description\"\n            rows=\"7\"\n            required\n          ></textarea>\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Compensation\" className=\"control-label\">\n            Compensation\n          </label>\n          <input\n            type=\"text\"\n            name=\"Compensation\"\n            className=\"form-control\"\n            id=\"Compensation\"\n            value=\"\"\n            maxLength=\"100\"\n            required\n            pattern=\"[0-9]+\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Benefits_Offered\" class=\"control-label\">\n            Benefits Offered\n          </label>\n          <input\n            type=\"text\"\n            name=\"Benefits_Offered\"\n            className=\"form-control\"\n            id=\"Benefits_Offered\"\n            value=\"\"\n            maxLength=\"100\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Job_Type\" class=\"control-label\">\n            Job Type\n          </label>\n          <div className=\"checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"Select_All\"\n                value=\"all\"\n                className=\"checkbox\"\n                onClick={(event) => selectAll(event)}\n              />{\" \"}\n              Select All\n            </label>\n            <br />\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"Contractor\"\n                value=\"contractor\"\n                className=\"checkbox\"\n              />{\" \"}\n              Contractor\n            </label>\n            <br />\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"FullTime\"\n                value=\"full-time\"\n                className=\"checkbox\"\n              />{\" \"}\n              Full-Time\n            </label>\n            <br />\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"PartTime\"\n                value=\"part-time\"\n                className=\"checkbox\"\n              />{\" \"}\n              Part-Time\n            </label>\n            <br />\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"Freelancer\"\n                value=\"freelancer\"\n                className=\"checkbox\"\n              />{\" \"}\n              Freelancer\n            </label>\n            <br />\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"Temporary\"\n                value=\"temporary\"\n                className=\"checkbox\"\n              />{\" \"}\n              Temporary\n            </label>\n            <br />\n            <label>\n              <input\n                type=\"checkbox\"\n                name=\"Other\"\n                value=\"other\"\n                className=\"checkbox\"\n              />{\" \"}\n              Other\n            </label>\n            <br />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Category\" className=\"control-label\">\n            Category\n          </label>\n          <select\n            id=\"Category\"\n            name=\"Category\"\n            className=\"form-control\"\n            size=\"1\"\n            required\n            oninvalid=\"this.setCustomValidity('Select a Category')\"\n            oninput=\"this.setCustomValidity('')\"\n          >\n            <option disabled hidden>\n              Select a category...\n            </option>\n            <option value=\"14\">Call Center</option>\n            <option value=\"23\">Corporate</option>\n            <option value=\"19\">Customer Service</option>\n            <option value=\"15\">Education</option>\n            <option value=\"12\">Financial</option>\n            <option value=\"16\">Food Service</option>\n            <option value=\"22\">Government</option>\n            <option value=\"11\">Hospitality</option>\n            <option value=\"17\">Light Industrial</option>\n            <option value=\"10\">Manufacturing</option>\n            <option value=\"21\">Mental Health</option>\n            <option value=\"13\">Municipal</option>\n            <option value=\"34\">Pool</option>\n            <option value=\"20\">Technology</option>\n            <option value=\"18\">Warehousing</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Skills_Required\" className=\"control-label\">\n            Skills Required\n          </label>\n          <select\n            id=\"Skills_Required\"\n            name=\"Skills_Required\"\n            className=\"form-control\"\n            size=\"1\"\n            required\n          >\n            <option></option>\n          </select>{\" \"}\n          select all the skills that are required for this job\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Equip_Required\" className=\"control-label\">\n            Equipment Required\n          </label>\n          <select\n            id=\"Equip_Required\"\n            name=\"Equip_Required\"\n            className=\"form-control\"\n            size=\"1\"\n            required\n          >\n            <option></option>\n          </select>{\" \"}\n          select all the equipment that is required for this job\n        </div>\n\n        <div className=\"form-group\">Company Information</div>\n\n        <hr />\n\n        <div className=\"form-group\">\n          <label for=\"Company_Name\" className=\"control-label\">\n            Company Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"Company_Name\"\n            className=\"form-control\"\n            id=\"Company_Name\"\n            value=\"\"\n            maxLength=\"100\"\n            required\n            oninvalid=\"this.setCustomValidity('Invalid company name')\"\n            oninput=\"this.setCustomValidity('')\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Website\" className=\"control-label\">\n            Website\n          </label>\n          <input\n            type=\"text\"\n            name=\"Website\"\n            className=\"form-control\"\n            id=\"Website\"\n            value=\"\"\n            maxLength=\"100\"\n            required\n            oninvalid=\"this.setCustomValidity('Invalid web address')\"\n            oninput=\"this.setCustomValidity('')\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Logo\" className=\"control-label form-control-file\">\n            Logo\n          </label>\n          <input id=\"Logo\" name=\"Logo\" className=\"input-file\" type=\"file\" />\n        </div>\n        <div className=\"form-group\">Location</div>\n\n        <hr />\n\n        <div className=\"form-group\">\n          <label for=\"Country\" className=\"control-label\">\n            Country\n          </label>\n          <select\n            id=\"Country\"\n            name=\"Country\"\n            className=\"form-control\"\n            size=\"1\"\n            required\n            oninvalid=\"this.setCustomValidity('Select a country')\"\n            oninput=\"this.setCustomValidity('')\"\n          >\n            <option value=\"United States\" selected>\n              {\" \"}\n              United States{\" \"}\n            </option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"State\" className=\"control-label\">\n            State / Province / Region\n          </label>\n          <select\n            id=\"State\"\n            name=\"State\"\n            className=\"form-control\"\n            size=\"1\"\n            required\n            oninvalid=\"this.setCustomValidity('Select a state')\"\n            oninput=\"this.setCustomValidity('')\"\n          >\n            <option></option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"City\" className=\"control-label\">\n            City\n          </label>\n          <select\n            id=\"City\"\n            name=\"City\"\n            className=\"form-control\"\n            size=\"1\"\n            required\n            oninvalid=\"this.setCustomValidity('Select a city')\"\n            oninput=\"this.setCustomValidity('')\"\n          >\n            <option></option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label for=\"Zip\" className=\"control-label\">\n            Zip / Postal Code\n          </label>\n          <select\n            id=\"Zip\"\n            name=\"Zip\"\n            className=\"form-control\"\n            size=\"1\"\n            required\n            oninvalid=\"this.setCustomValidity('Select a zip')\"\n            oninput=\"this.setCustomValidity('')\"\n          >\n            <option></option>\n          </select>\n        </div>\n\n        <p className=\"textend\"></p>\n\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-success\">\n            Send\n          </button>\n          <button type=\"reset\" className=\"btn btn-danger\">\n            Reset\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst setValiditiy = (validationMessage) => {};\n","/Users/nazwright/Desktop/backend/frontend/src/components/listings/Job.js",["242","243","244","245"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Button, Col, Row, Badge, Container } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { fetchListing } from \"../../actions\";\nimport * as RiIcons from \"react-icons/ri\";\n\nclass Job extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchListing();\n  }\n\n  renderJob() {\n    return (\n      // filter the the matching listing\n      this.props.listings &&\n      this.props.listings\n        .filter((listing) => listing.title === this.props.match.params.id)\n        .map((listing) => {\n          return (\n            <div key={listing._id}>\n              <Row className=\" bg-gray\">\n                <Col>\n                  <div>\n                    <div>\n                      <h4>{listing.jobinfo.category}</h4>\n                    </div>\n                  </div>\n                  <div>\n                    <div>\n                      <h3>\n                        {listing.title}{\" \"}\n                        <span className=\"m-r-5\">\n                          {listing.new ? (\n                            <Badge variant=\"success\">New</Badge>\n                          ) : undefined}\n                        </span>\n                        <span className=\"m-r-5\">\n                          {listing.jobinfo.jobType ? (\n                            <Badge variant=\"danger\">\n                              {listing.jobinfo.jobType}\n                            </Badge>\n                          ) : undefined}\n                        </span>\n                      </h3>{\" \"}\n                    </div>\n                  </div>\n                </Col>\n\n                <Col>\n                  <Row></Row>\n                  <Row>\n                    <Button href={`/apply/${listing._id}`}>Apply</Button>\n                  </Row>\n                </Col>\n              </Row>\n              <div>\n                <div className=\"float-container\">\n                  <div className=\"float-child\">\n                    <span className=\"m-r-20 \">\n                      <RiIcons.RiSuitcaseLine size={50} color=\"black\" />\n                    </span>\n                    <span>{listing.jobinfo.companyName}</span>\n                    <hr></hr>\n                  </div>\n                  <div className=\"float-child\"></div>\n                </div>\n              </div>\n            </div>\n          );\n        })\n    );\n  }\n\n  render() {\n    const { match } = this.props;\n    return <div>{this.renderJob()}</div>;\n  }\n}\n\nfunction mapStateToProps({ listings }) {\n  return { listings };\n}\n\nexport default connect(mapStateToProps, { fetchListing })(Job);\n","/Users/nazwright/Desktop/backend/frontend/src/components/listings/ListingsPage.js",["246","247"],"import React, { useState, useEffect } from \"react\";\nimport ListingsList from \"./ListingsList\";\nimport { connect } from \"react-redux\";\nimport { fetchListing } from \"../../actions\";\nimport JobsPagination from \"./JobsPagination\";\n\nfunction ListingsPage(props) {\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [listingsPerPage, setListingsPerPage] = useState(5);\n\n  useEffect(() => {\n    setLoading(true);\n    if (props.listings) {\n      setLoading(false);\n    }\n  }, []);\n\n  const indexOfLastListing = currentPage * listingsPerPage;\n  const indexOfFirstListing = indexOfLastListing - listingsPerPage;\n  const currentlistings = props.listings.slice(\n    indexOfFirstListing,\n    indexOfLastListing\n  );\n\n  // Change Page\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div>\n      <h2>Listings</h2>\n      <hr></hr>\n      {console.log(\"I have listings\", props.listings)}\n\n      <ListingsList listings={currentlistings} loading={loading} />\n      <JobsPagination\n        listingsPerPage={listingsPerPage}\n        totalListings={props.listings.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n}\n\nfunction mapStateToProps({ listings }) {\n  return { listings };\n}\n\nexport default connect(mapStateToProps, { fetchListing })(ListingsPage);\n","/Users/nazwright/Desktop/backend/frontend/src/reducers/fieldsReducer.js",["248"],"import { FETCH_FIELDS } from \"../actions/types\";\n\nexport default function (state = [], action) {\n  // console.log(action);\n  switch (action.type) {\n    case FETCH_FIELDS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","/Users/nazwright/Desktop/backend/frontend/src/reducers/submissionsReducer.js",["249"],"import { FETCH_SUBS } from \"../actions/types\";\n\nexport default function (state = [], action) {\n  // console.log(action);\n  switch (action.type) {\n    case FETCH_SUBS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","/Users/nazwright/Desktop/backend/frontend/src/reducers/listingReducer.js",["250"],"import {FETCH_LISTING} from '../actions/types'\n\nexport default function( state = [] , action ){\n    // console.log(action);\n    switch(action.type){\n        case FETCH_LISTING:\n            return action.payload;\n        default:\n            return state;        \n    }\n}","/Users/nazwright/Desktop/backend/frontend/src/reducers/authReducer.js",["251"],"import { FETCH_USER } from \"../actions/types\";\n\nexport default function (state = null, action) {\n  // console.log(action);\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false;\n    default:\n      return state;\n  }\n}\n\n// selectors\n","/Users/nazwright/Desktop/backend/frontend/src/reducers/zipsReducer.js",["252"],"import { FETCH_ZIPS } from \"../actions/types\";\n\nexport default function (state = [], action) {\n  // console.log(action);\n  switch (action.type) {\n    case FETCH_ZIPS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","/Users/nazwright/Desktop/backend/frontend/src/actions/index.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/headers/VisitorHeader.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/headers/LoggedInHeader.js",["253"],"import React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Payments from \"../Payments\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { ApplicantMenu, EmployerMenu, AdminMenu } from \"../data/SidebarData\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\";\nimport * as actions from \"../../actions\";\n\nclass LoggedInHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSidebar = this.handleSidebar.bind(this);\n    this.handleSubMenu = this.handleSubMenu.bind(this);\n    this.state = {\n      sidebar: false,\n      submenu: false,\n    };\n  }\n\n  handleButton() {\n    console.log(\"hekllo\");\n  }\n\n  handleCheckout() {\n    const data = {\n      priceId: \"price_1I7qTREah8AfDWDxVT8yjaiP\",\n    };\n    actions.createCheckoutSession(JSON.stringify(data));\n  }\n\n  handleSidebar() {\n    const sidebar = this.state.sidebar;\n    this.setState({ sidebar: !sidebar });\n  }\n  handleSubMenu() {\n    const submenu = this.state.submenu;\n    this.setState({ submenu: submenu });\n  }\n  renderPayment() {\n    return <Payments />;\n  }\n\n  render() {\n    // function that updates state in\n    // toggles on off\n    const sidebar = this.state.sidebar;\n    var Menu;\n\n    const SideBar =\n      this.props.auth && this.props.auth.role === \"Applicant\"\n        ? ApplicantMenu\n        : this.props.auth.role === \"Admin\"\n        ? AdminMenu\n        : this.props.auth.role === \"Employer\"\n        ? EmployerMenu\n        : undefined;\n    return (\n      <div>\n        <div className=\"navbar\">\n          <div className=\"login-header add-full-height\">\n            <div>\n              <Link to=\"#\" className=\"menu-bars\">\n                <FaIcons.FaBars onClick={this.handleSidebar} />\n              </Link>\n              <Button onClick={this.handleCheckout}>pay</Button>\n            </div>\n            <div>People Count</div>\n            <div>\n              {this.props.auth.role === \"Employer\" && this.props.auth.isAdmin\n                ? this.renderPayment()\n                : undefined}\n              <Dropdown className=\"user-options-dropdown add-full-width\">\n                <Dropdown.Toggle\n                  className=\"user-drp-button add-half-width right-corner\"\n                  variant=\"primary\"\n                  id=\"dropdown-basic\"\n                >\n                  <FaIcons.FaUser></FaIcons.FaUser>\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"add-half-width\">\n                  <Dropdown.Item></Dropdown.Item>\n                  <Dropdown.Item href=\"/profile\">User Profile</Dropdown.Item>\n                  <Dropdown.Item href=\"/api/customer-portal\">\n                    Customer Portal\n                  </Dropdown.Item>\n                  <Dropdown.Item href=\"/api/logout\">Logout</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          </div>\n        </div>\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n          <div className=\"nav-menu-items\">\n            <div className=\"navbar-toggle\">\n              <Link to=\"#\" className=\"menu-bars\">\n                <AiIcons.AiOutlineClose onClick={this.handleSidebar} />\n              </Link>\n            </div>\n            {SideBar\n              ? SideBar.map((item, index) => {\n                  return (\n                    <div key={index}>\n                      <div className={item.cName}>\n                        <Link\n                          to={item.path}\n                          onClick={\n                            item.submenu ? this.handleSubMenu : undefined\n                          }\n                        >\n                          {item.icon}\n                          <span>{item.title}</span>\n                        </Link>\n                      </div>\n\n                      <div className=\"sub_menu\">\n                        {item.sub_menu === undefined\n                          ? undefined\n                          : item.sub_menu === undefined\n                          ? undefined\n                          : item.sub_menu.map((sub, subindex) => {\n                              return (\n                                <div key={subindex} className=\"nav-text\">\n                                  <Link to={sub.path}>\n                                    <span>{sub.title}</span>\n                                  </Link>\n                                </div>\n                              );\n                            })}\n                      </div>\n                    </div>\n                  );\n                })\n              : \"Please refresh\"}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps, actions)(LoggedInHeader);\n","/Users/nazwright/Desktop/backend/frontend/src/components/dashboards/EmployerDash.js",["254","255","256","257"],"import React, { Component } from \"react\";\nimport { WrkfwidgetData } from \"../data/WrkfwidgetData\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Form from \"react-bootstrap/Form\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { Col, Row } from \"react-bootstrap\";\nimport WorkflowCard from \"../workflow/WorkflowCard\";\n\nexport default class EmployerDash extends Component {\n  render() {\n    return (\n      <div>\n        <Row>\n          {WrkfwidgetData.map((item, index) => {\n            return (\n              <Col key={index}>\n                <WorkflowCard card={item} />\n              </Col>\n            );\n          })}\n        </Row>\n        <div className=\"row\">\n          <CardDeck>\n            <Card bg=\"secondary\" text=\"white\">\n              <Card.Header>Template Upload</Card.Header>\n              <Card.Body>\n                <Card.Title> Card Title </Card.Title>\n\n                <Card.Text>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </Card.Text>\n              </Card.Body>\n            </Card>\n            <Card className=\"add-scroll-bar\"></Card>\n          </CardDeck>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/nazwright/Desktop/backend/frontend/src/components/clients/ClientListItem.js",["258"],"import React, { Component } from \"react\";\nimport { Media } from \"react-bootstrap\";\n\nexport default class ListingsItem extends Component {\n  render() {\n    return (\n      <div>\n        <Media>\n          <img>\n            {\n              //logo here\n            }\n          </img>\n          <Media.Body>\n            <h4>{this.props.client.clientName}</h4>\n            <span>Client Info Here</span>\n          </Media.Body>\n        </Media>\n        <hr></hr>\n      </div>\n    );\n  }\n}\n","/Users/nazwright/Desktop/backend/frontend/src/components/dashboards/ApplicantDash.js",["259","260"],"import React, { Component } from \"react\";\nimport {\n  Col,\n  Row,\n  Card,\n  Button,\n  Form,\n  FormControl,\n  Media,\n  ListGroup,\n  Container,\n} from \"react-bootstrap\";\nimport Contacts from \"../Contacts\";\nimport ActionButtonData from \"../data/ActionButtonData\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nclass ApplicantDash extends Component {\n  render() {\n    return (\n      <div>\n        <Row>\n          <Card bg=\"danger\" className=\"action-button-card\">\n            <Card.Header> Actions </Card.Header>\n            <Card.Body>\n              {ActionButtonData.map((button, index) => {\n                return (\n                  <span key={index}>\n                    <Button sm={2}>{button.title}</Button>\n                  </span>\n                );\n              })}\n            </Card.Body>\n          </Card>\n        </Row>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>Search Contacts</Card.Header>\n              <Card.Body>\n                <Row>\n                  <Form inline>\n                    <FormControl\n                      type=\"text\"\n                      placeholder=\"Search\"\n                      className=\"mr-sm-2\"\n                    />\n                    <Button variant=\"outline-primary\">Search</Button>\n                  </Form>\n                </Row>\n                <Row>\n                  <div className=\"add-full-width\">\n                    <Media>\n                      <img\n                        width={64}\n                        height={64}\n                        className=\"align-self-start mr-3\"\n                        src=\"holder.js/64x64\"\n                        alt=\"Generic placeholder\"\n                      />\n                      <Media.Body>\n                        <h5>John Doe</h5>\n                      </Media.Body>\n                    </Media>\n\n                    <Media>\n                      <img\n                        width={64}\n                        height={64}\n                        className=\"align-self-center mr-3\"\n                        src=\"holder.js/64x64\"\n                        alt=\"Generic placeholder\"\n                      />\n                      <Media.Body>\n                        <h5>Jane Doe</h5>\n                      </Media.Body>\n                    </Media>\n\n                    <Media>\n                      <img\n                        width={64}\n                        height={64}\n                        className=\"align-self-end mr-3\"\n                        src=\"holder.js/64x64\"\n                        alt=\"Generic placeholder\"\n                      />\n                      <Media.Body>\n                        <h5>John Doe</h5>\n                      </Media.Body>\n                    </Media>\n                  </div>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card className=\"add-scroll-bar\"></Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>Contact Message</Card.Header>\n              <Card.Body>\n                <Form>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Recipient\"\n                    className=\"mr-sm-2\"\n                  />\n                  <FormControl\n                    type=\"textarea\"\n                    placeholder=\"Message\"\n                    className=\"mr-sm-2 height-100\"\n                  />\n                  <Button variant=\"outline-primary\">Send Message</Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card bg=\"primary\">\n              <Card.Header>Applications</Card.Header>\n              <Card.Body>\n                <ListGroup className=\"add-full-width\">\n                  <ListGroup.Item disabled>Applications</ListGroup.Item>\n                  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n                  <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n                  <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                </ListGroup>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row></Row>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ listings }) {\n  return { listings };\n}\n\nexport default connect(mapStateToProps, actions)(ApplicantDash);\n","/Users/nazwright/Desktop/backend/frontend/src/components/clients/ClientFieldsData.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/listings/JobsPagination.js",["261","262","263"],"import React, { Component } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nexport const JobsPagination = ({\n  listingsPerPage,\n  totalListings,\n  paginate,\n}) => {\n  const pageNumbers = [];\n\n  for (var i = 1; i <= Math.ceil(totalListings / listingsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav style={{ height: \"50px\" }}>\n      <ul className=\"pagination\">\n        {pageNumbers.map((number) => {\n          return (\n            <li key={number} className=\"page-item\">\n              <a\n                onClick={() => paginate(number)}\n                href=\"#\"\n                className=\"page-link\"\n              >\n                {number}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default JobsPagination;\n","/Users/nazwright/Desktop/backend/frontend/src/components/listings/ListingsList.js",["264","265","266"],"import React, { useState, useEffect } from \"react\";\nimport ListingsItem from \"./ListingsItem\";\nimport { Container, Spinner } from \"react-bootstrap\";\n\nfunction ListingsList(props) {\n  if (props.loading) {\n    return (\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    );\n  }\n\n  function renderListings() {\n    //console.log(\"this is listings\", props.listings);\n    // reverse for the newest listings first.\n    return props.listings.reverse().map((listing) => {\n      return <ListingsItem key={listing._id} listing={listing} />;\n    });\n  }\n\n  return (\n    <div className=\"my-4\">\n      <div>{renderListings()}</div>\n    </div>\n  );\n}\n\nexport default ListingsList;\n","/Users/nazwright/Desktop/backend/frontend/src/actions/types.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/listings/ListingsItem.js",["267","268","269","270","271","272","273","274"],"import React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Container,\n  Media,\n  Badge,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport * as RiIcons from \"react-icons/ri\";\nimport * as IoIcons from \"react-icons/io\";\nimport * as GrIcons from \"react-icons/gr\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"../../actions\";\n\nclass ListingsItem extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n  }\n\n  renderButtons() {\n    switch (this.props.auth) {\n      case null:\n        return;\n      case false:\n        return;\n      default:\n        switch (this.props.auth.role) {\n          case \"Admin\":\n            return [\n              <Button variant=\"danger\" key={0}>\n                Delete Listing\n              </Button>,\n              <Button variant=\"danger\" key={1}>\n                Edit Listing\n              </Button>,\n            ];\n          default:\n            return;\n        }\n    }\n  }\n\n  render() {\n    const { listing } = this.props;\n    return (\n      <Card className=\"mb-3\">\n        <Card.Body>\n          <div className=\"d-flex justify-content-between\">\n            <div>\n              <Card.Title>\n                {listing.title}-{\" \"}\n                <span className=\"text-muted font-weight-light\">\n                  {listing.jobinfo.companyName}\n                </span>\n              </Card.Title>\n              <Card.Subtitle className=\"text-muted mb-2\">\n                {new Date(listing.dateCreated).toLocaleDateString()}\n              </Card.Subtitle>\n              {listing.new ? (\n                <Badge variant=\"success\" className=\"mr-2\">\n                  New\n                </Badge>\n              ) : undefined}\n              {listing.jobinfo.jobType ? (\n                <Badge variant=\"danger\">{listing.jobinfo.jobType}</Badge>\n              ) : undefined}\n              <div style={{ wordBreak: \"break-all\" }}>\n                {listing.jobinfo.description}\n              </div>\n            </div>\n            <RiIcons.RiSuitcase2Fill size={40} className=\"d-none d-md-block\" />\n          </div>\n          <Card.Text>\n            <Button href={`/job/${listing.title}`} variant=\"danger\">\n              View Job\n            </Button>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return { auth };\n}\n\nexport default connect(mapStateToProps, { fetchUser })(ListingsItem);\n","/Users/nazwright/Desktop/backend/frontend/src/components/workflow/WorkflowCard.js",["275","276"],"import { connect } from \"react-redux\";\nimport { fetchSubmissions } from \"../../actions\";\nimport React, { Component } from \"react\";\nimport { Card, Badge, Button, Modal, Table } from \"react-bootstrap\";\nimport * as GrIcons from \"react-icons/gr\";\nimport ModalCOM from \"../Modal\";\nclass WorkflowCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchSubmissions();\n  }\n\n  modalOpen() {\n    this.setState({ modal: true });\n  }\n\n  modalClose() {\n    this.setState({ modal: false });\n    //if it is a form in the modal clear form values here.\n  }\n\n  filteredSubmissions = (submissions) => {\n    return submissions\n      .filter((submissions) => submissions.status === this.props.card.name)\n      .map((filtered) => {\n        return filtered;\n      });\n  };\n\n  render() {\n    const { subs, card } = this.props;\n    console.log(subs);\n    const submissions = this.filteredSubmissions(subs);\n    return (\n      <div>\n        <Card bg={card.background} className=\"add-full-height\" text=\"white\">\n          <span>\n            <Badge variant=\"light\" className=\"counter\">\n              {submissions && submissions.length}\n            </Badge>\n          </span>\n          <Card.Header>{card.title}</Card.Header>\n          <Card.Body>\n            <Card.Title> {submissions && submissions.length}</Card.Title>\n            <Card.Text>additional info like progress</Card.Text>\n            <Button variant=\"secondary\" onClick={(e) => this.modalOpen(e)}>\n              {this.props.card.buttonText}\n            </Button>\n          </Card.Body>\n        </Card>\n\n        <Modal show={this.state.modal} onHide={(e) => this.modalClose(e)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{card.title}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {submissions === undefined || submissions === null\n              ? \"No submissions\"\n              : submissions.map((submission) => {\n                  return (\n                    <div key={submission._id}>\n                      <span className=\"m-r-10\">\n                        <GrIcons.GrUserNew />\n                        <span className=\"m-r-10\">\n                          {submission.values.first}\n                        </span>\n                      </span>\n                    </div>\n                  );\n                })}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={(e) => this.modalClose(e)}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ subs }) {\n  return { subs };\n}\n\nexport default connect(mapStateToProps, { fetchSubmissions })(WorkflowCard);\n","/Users/nazwright/Desktop/backend/frontend/src/components/Payments.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/data/WrkfwidgetData.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/data/ActionButtonData.js",["277"],"export default [\n    {title: \"Add new contact\"},\n    {title: \"Send Message\"},\n    {title: \"Client Information\"},\n\n];","/Users/nazwright/Desktop/backend/frontend/src/components/data/SidebarData.js",[],"/Users/nazwright/Desktop/backend/frontend/src/components/Modal.js",["278"],"import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nconst ModalCOM = ({ handleClose, show, children }) => {\n  const showHideClassName = show ? \" d-block\" : \"d-none\";\n  return (\n    <Modal className={`${showHideClassName}`}>\n      {children}\n      <button onClick={handleClose}> Close </button>\n    </Modal>\n  );\n};\n\nexport default Modal;\n",{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":15,"column":9,"nodeType":"285","messageId":"286","endLine":24,"endColumn":10},{"ruleId":"287","severity":1,"message":"288","line":6,"column":15,"nodeType":"289","messageId":"290","endLine":6,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":73,"column":17,"nodeType":"293","endLine":73,"endColumn":29},{"ruleId":"287","severity":1,"message":"294","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":14},{"ruleId":"287","severity":1,"message":"295","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":13},{"ruleId":"287","severity":1,"message":"296","line":6,"column":21,"nodeType":"289","messageId":"290","endLine":6,"endColumn":27},{"ruleId":"287","severity":1,"message":"297","line":8,"column":8,"nodeType":"289","messageId":"290","endLine":8,"endColumn":12},{"ruleId":"287","severity":1,"message":"294","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":14},{"ruleId":"287","severity":1,"message":"295","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":13},{"ruleId":"287","severity":1,"message":"296","line":6,"column":21,"nodeType":"289","messageId":"290","endLine":6,"endColumn":27},{"ruleId":"283","severity":1,"message":"284","line":35,"column":7,"nodeType":"285","messageId":"286","endLine":41,"endColumn":8},{"ruleId":"298","severity":1,"message":"299","line":38,"column":9,"nodeType":"300","messageId":"301","endLine":40,"endColumn":17},{"ruleId":"287","severity":1,"message":"294","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":14},{"ruleId":"287","severity":1,"message":"295","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":13},{"ruleId":"287","severity":1,"message":"296","line":6,"column":21,"nodeType":"289","messageId":"290","endLine":6,"endColumn":27},{"ruleId":"287","severity":1,"message":"297","line":8,"column":8,"nodeType":"289","messageId":"290","endLine":8,"endColumn":12},{"ruleId":"287","severity":1,"message":"302","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":16},{"ruleId":"283","severity":1,"message":"284","line":22,"column":5,"nodeType":"285","messageId":"286","endLine":32,"endColumn":6},{"ruleId":"291","severity":1,"message":"303","line":72,"column":13,"nodeType":"293","endLine":72,"endColumn":57},{"ruleId":"291","severity":1,"message":"303","line":88,"column":13,"nodeType":"293","endLine":88,"endColumn":57},{"ruleId":"291","severity":1,"message":"303","line":105,"column":13,"nodeType":"293","endLine":105,"endColumn":55},{"ruleId":"304","severity":1,"message":"305","line":11,"column":6,"nodeType":"306","endLine":11,"endColumn":8,"suggestions":"307"},{"ruleId":"287","severity":1,"message":"308","line":13,"column":12,"nodeType":"289","messageId":"290","endLine":13,"endColumn":22},{"ruleId":"287","severity":1,"message":"309","line":13,"column":13,"nodeType":"289","messageId":"290","endLine":13,"endColumn":20},{"ruleId":"287","severity":1,"message":"310","line":1,"column":10,"nodeType":"289","messageId":"290","endLine":1,"endColumn":22},{"ruleId":"287","severity":1,"message":"311","line":1,"column":24,"nodeType":"289","messageId":"290","endLine":1,"endColumn":33},{"ruleId":"287","severity":1,"message":"312","line":1,"column":35,"nodeType":"289","messageId":"290","endLine":1,"endColumn":41},{"ruleId":"287","severity":1,"message":"313","line":1,"column":43,"nodeType":"289","messageId":"290","endLine":1,"endColumn":48},{"ruleId":"287","severity":1,"message":"314","line":1,"column":28,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"315","line":369,"column":7,"nodeType":"289","messageId":"290","endLine":369,"endColumn":19},{"ruleId":"287","severity":1,"message":"295","line":1,"column":8,"nodeType":"289","messageId":"290","endLine":1,"endColumn":13},{"ruleId":"287","severity":1,"message":"316","line":3,"column":35,"nodeType":"289","messageId":"290","endLine":3,"endColumn":44},{"ruleId":"317","severity":1,"message":"318","line":9,"column":3,"nodeType":"319","messageId":"320","endLine":11,"endColumn":4},{"ruleId":"287","severity":1,"message":"321","line":80,"column":13,"nodeType":"289","messageId":"290","endLine":80,"endColumn":18},{"ruleId":"287","severity":1,"message":"322","line":10,"column":27,"nodeType":"289","messageId":"290","endLine":10,"endColumn":45},{"ruleId":"304","severity":1,"message":"323","line":17,"column":6,"nodeType":"306","endLine":17,"endColumn":8,"suggestions":"324"},{"ruleId":"325","severity":1,"message":"326","line":3,"column":1,"nodeType":"327","endLine":11,"endColumn":2},{"ruleId":"325","severity":1,"message":"326","line":3,"column":1,"nodeType":"327","endLine":11,"endColumn":2},{"ruleId":"325","severity":1,"message":"326","line":3,"column":1,"nodeType":"327","endLine":11,"endColumn":2},{"ruleId":"325","severity":1,"message":"326","line":3,"column":1,"nodeType":"327","endLine":11,"endColumn":2},{"ruleId":"325","severity":1,"message":"326","line":3,"column":1,"nodeType":"327","endLine":11,"endColumn":2},{"ruleId":"287","severity":1,"message":"328","line":50,"column":9,"nodeType":"289","messageId":"290","endLine":50,"endColumn":13},{"ruleId":"287","severity":1,"message":"296","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":14},{"ruleId":"287","severity":1,"message":"329","line":5,"column":8,"nodeType":"289","messageId":"290","endLine":5,"endColumn":13},{"ruleId":"287","severity":1,"message":"330","line":7,"column":8,"nodeType":"289","messageId":"290","endLine":7,"endColumn":12},{"ruleId":"287","severity":1,"message":"331","line":8,"column":8,"nodeType":"289","messageId":"290","endLine":8,"endColumn":16},{"ruleId":"332","severity":1,"message":"333","line":9,"column":11,"nodeType":"293","endLine":9,"endColumn":16},{"ruleId":"287","severity":1,"message":"316","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":12},{"ruleId":"287","severity":1,"message":"334","line":13,"column":8,"nodeType":"289","messageId":"290","endLine":13,"endColumn":16},{"ruleId":"287","severity":1,"message":"335","line":1,"column":17,"nodeType":"289","messageId":"290","endLine":1,"endColumn":26},{"ruleId":"287","severity":1,"message":"336","line":2,"column":10,"nodeType":"289","messageId":"290","endLine":2,"endColumn":20},{"ruleId":"291","severity":1,"message":"292","line":21,"column":15,"nodeType":"293","endLine":25,"endColumn":16},{"ruleId":"287","severity":1,"message":"314","line":1,"column":17,"nodeType":"289","messageId":"290","endLine":1,"endColumn":25},{"ruleId":"287","severity":1,"message":"337","line":1,"column":27,"nodeType":"289","messageId":"290","endLine":1,"endColumn":36},{"ruleId":"287","severity":1,"message":"316","line":3,"column":10,"nodeType":"289","messageId":"290","endLine":3,"endColumn":19},{"ruleId":"287","severity":1,"message":"338","line":3,"column":3,"nodeType":"289","messageId":"290","endLine":3,"endColumn":6},{"ruleId":"287","severity":1,"message":"288","line":4,"column":3,"nodeType":"289","messageId":"290","endLine":4,"endColumn":6},{"ruleId":"287","severity":1,"message":"316","line":5,"column":3,"nodeType":"289","messageId":"290","endLine":5,"endColumn":12},{"ruleId":"287","severity":1,"message":"339","line":6,"column":3,"nodeType":"289","messageId":"290","endLine":6,"endColumn":8},{"ruleId":"287","severity":1,"message":"340","line":12,"column":13,"nodeType":"289","messageId":"290","endLine":12,"endColumn":20},{"ruleId":"287","severity":1,"message":"309","line":13,"column":13,"nodeType":"289","messageId":"290","endLine":13,"endColumn":20},{"ruleId":"287","severity":1,"message":"341","line":14,"column":13,"nodeType":"289","messageId":"290","endLine":14,"endColumn":20},{"ruleId":"287","severity":1,"message":"342","line":15,"column":10,"nodeType":"289","messageId":"290","endLine":15,"endColumn":14},{"ruleId":"287","severity":1,"message":"343","line":4,"column":38,"nodeType":"289","messageId":"290","endLine":4,"endColumn":43},{"ruleId":"287","severity":1,"message":"344","line":6,"column":8,"nodeType":"289","messageId":"290","endLine":6,"endColumn":16},{"ruleId":"325","severity":1,"message":"345","line":1,"column":1,"nodeType":"327","endLine":6,"endColumn":3},{"ruleId":"287","severity":1,"message":"346","line":4,"column":7,"nodeType":"289","messageId":"290","endLine":4,"endColumn":15},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form1a' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'Swal' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'ReactDOM' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["349"],"'filterSubs' is defined but never used.","'GrIcons' is defined but never used.","'MapContainer' is defined but never used.","'TileLayer' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'useState' is defined but never used.","'setValiditiy' is assigned a value but never used.","'Container' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'match' is assigned a value but never used.","'setListingsPerPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.listings'. Either include it or remove the dependency array.",["350"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Menu' is defined but never used.","'Badge' is defined but never used.","'Form' is defined but never used.","'Dropdown' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Contacts' is defined but never used.","'Component' is defined but never used.","'Pagination' is defined but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'Media' is defined but never used.","'IoIcons' is defined but never used.","'AiIcons' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'ModalCOM' is defined but never used.","Assign array to a variable before exporting as module default","'ModalCOM' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},"Update the dependencies array to be: [dispatch]",{"range":"355","text":"356"},"Update the dependencies array to be: [props.listings]",{"range":"357","text":"358"},[344,346],"[dispatch]",[527,529],"[props.listings]"]